<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on KatieThe.Dev</title><link>/tags/hugo/</link><description>Recent content in Hugo on KatieThe.Dev</description><generator>Hugo</generator><language>en</language><copyright>KatieTheDev</copyright><lastBuildDate>Sun, 24 Nov 2024 01:03:51 -0700</lastBuildDate><atom:link href="/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>Automating Hugo deployments with GitHub Actions and Webhooks on Ubuntu 24.04 LTS</title><link>/posts/2024/11/24/hugo-automated-deployments-github-actions/</link><pubDate>Sun, 24 Nov 2024 00:54:34 -0700</pubDate><guid>/posts/2024/11/24/hugo-automated-deployments-github-actions/</guid><description>&lt;h1 id="overview"&gt;Overview&lt;/h1&gt;
&lt;p&gt;In this blog post, I will walk you through the process of automating Hugo deployments using a bash script and setting up a webhook to streamline updates from GitHub. The guide is designed for users on Ubuntu Server 24.04 LTS and covers three main components:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creating a Deployment Script: We will create a shell script that handles the tasks of pulling the latest code, building the Hugo site, and deploying it to the web directory. This script will ensure that your site is always up to date with the latest changes.&lt;/li&gt;
&lt;li&gt;Configuring a Webhook: Once the deployment script is in place, we’ll set up a webhook configuration that allows GitHub to automatically trigger the deployment process every time you push code to your repository. This automation saves time and reduces the potential for manual errors.&lt;/li&gt;
&lt;li&gt;Setting Up a Systemd Service: Finally, we’ll create a systemd service to manage the webhook, ensuring that it runs reliably and automatically on server startup. This includes configuring the service for SSL if needed.&lt;/li&gt;
&lt;li&gt;Enable the webhook&lt;/li&gt;
&lt;li&gt;Create a GitHub Actions workflow. This comes with the added benefit of automated testing before uploading to your server. If the build fails, it will simply not complete the workflow!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By the end of this post, you’ll have a fully automated Hugo deployment system that responds instantly to your code updates, enhancing your development workflow and improving site management.&lt;/p&gt;</description></item><item><title>Automating Hugo deployments with GitHub and Webhooks on Ubuntu 24.04 LTS</title><link>/posts/2024/10/16/hugo-automated-deployments-webhooks-ubuntu-24.04/</link><pubDate>Wed, 16 Oct 2024 15:50:57 -0600</pubDate><guid>/posts/2024/10/16/hugo-automated-deployments-webhooks-ubuntu-24.04/</guid><description>&lt;h1 id="overview"&gt;Overview&lt;/h1&gt;
&lt;p&gt;In this blog post, I will walk you through the process of automating Hugo deployments using a bash script and setting up a webhook to streamline updates from GitHub. The guide is designed for users on Ubuntu Server 24.04 LTS and covers three main components:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creating a Deployment Script: We will create a shell script that handles the tasks of pulling the latest code, building the Hugo site, and deploying it to the web directory. This script will ensure that your site is always up to date with the latest changes.&lt;/li&gt;
&lt;li&gt;Configuring a Webhook: Once the deployment script is in place, we’ll set up a webhook configuration that allows GitHub to automatically trigger the deployment process every time you push code to your repository. This automation saves time and reduces the potential for manual errors.&lt;/li&gt;
&lt;li&gt;Setting Up a Systemd Service: Finally, we’ll create a systemd service to manage the webhook, ensuring that it runs reliably and automatically on server startup. This includes configuring the service for SSL if needed.&lt;/li&gt;
&lt;li&gt;Enable the webhook&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By the end of this post, you’ll have a fully automated Hugo deployment system that responds instantly to your code updates, enhancing your development workflow and improving site management.&lt;/p&gt;</description></item></channel></rss>